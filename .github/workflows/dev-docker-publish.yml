name: Dev build and publish Docker distributions to Github Container Registry ghcr.io

on:
  push:
    branches-ignore:
      - master
      - version-*

jobs:
  check-vulnerabilities:
    env:
      report-file: report.txt
    name: Check vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Run check
        run: govulncheck -show verbose ./... 2>&1 | tee ${{ env.report-file }}
      - name: Collect report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: 'govulncheck-report'
          path: ${{ env.report-file }}
          overwrite: true
  build:
    runs-on: ubuntu-20.04
    needs: [check-vulnerabilities]
    steps:
      - uses: actions/checkout@v4

      # Prepare custom build version
      - name: Get branch name
        id: branch
        run: echo "branch_name=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Get SHA of the commit
        id: sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Get go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Get release_version
        id: ver
        run: echo "release_version=$(go list -f '{{.Version}}' -m github.com/th2-net/th2-box-template-go@box-template)" >> $GITHUB_OUTPUT

      - name: Build custom release version
        id: release_ver
        run: echo value="${{ steps.ver.outputs.release_version }}-${{ steps.branch.outputs.branch_name }}-${{ github.run_id }}-${{ steps.sha.outputs.sha_short }}" >> $GITHUB_OUTPUT

      - name: Show custom release version
        run: echo ${{ steps.release_ver.outputs.value }}

      # Build and publish image 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_OUTPUT
        id: meta

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.release_ver.outputs.value }}
          labels: com.exactpro.th2.${{ steps.meta.outputs.REPOSITORY_NAME }}=${{ steps.ver.outputs.value }}